<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="3" total="13" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="13741" started-at="2021-12-01T12:01:45 IST" finished-at="2021-12-01T12:01:59 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="13741" started-at="2021-12-01T12:01:45 IST" finished-at="2021-12-01T12:01:59 IST">
      <class name="APITest.E_commerce">
        <test-method status="PASS" signature="login()[pri:1, instance:APITest.E_commerce@1195bc3]" name="login" duration-ms="6215" started-at="2021-12-01T12:01:45 IST" finished-at="2021-12-01T12:01:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="getusers()[pri:2, instance:APITest.E_commerce@1195bc3]" name="getusers" duration-ms="2991" started-at="2021-12-01T12:01:51 IST" finished-at="2021-12-01T12:01:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getusers -->
        <test-method status="PASS" signature="delete()[pri:3, instance:APITest.E_commerce@1195bc3]" name="delete" duration-ms="1585" started-at="2021-12-01T12:01:54 IST" finished-at="2021-12-01T12:01:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- APITest.E_commerce -->
      <class name="APITest.test">
        <test-method status="FAIL" signature="deleteboard()[pri:2, instance:APITest.test@16e852b]" name="deleteboard" duration-ms="684" started-at="2021-12-01T12:01:56 IST" finished-at="2021-12-01T12:01:56 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at APITest.test.deleteboard(test.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteboard -->
      </class> <!-- APITest.test -->
      <class name="APITest.Demo2_TestNG">
        <test-method status="PASS" signature="BC()[pri:0, instance:APITest.Demo2_TestNG@13167f4]" name="BC" is-config="true" duration-ms="0" started-at="2021-12-01T12:01:56 IST" finished-at="2021-12-01T12:01:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BC -->
        <test-method status="PASS" signature="testcase3()[pri:0, instance:APITest.Demo2_TestNG@13167f4]" name="testcase3" duration-ms="3" started-at="2021-12-01T12:01:56 IST" finished-at="2021-12-01T12:01:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
        <test-method status="PASS" signature="BM()[pri:0, instance:APITest.Demo2_TestNG@13167f4]" name="BM" is-config="true" duration-ms="0" started-at="2021-12-01T12:01:56 IST" finished-at="2021-12-01T12:01:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method status="PASS" signature="AT()[pri:0, instance:APITest.Demo2_TestNG@13167f4]" name="AT" is-config="true" duration-ms="0" started-at="2021-12-01T12:01:59 IST" finished-at="2021-12-01T12:01:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AT -->
        <test-method status="PASS" signature="AS()[pri:0, instance:APITest.Demo2_TestNG@13167f4]" name="AS" is-config="true" duration-ms="1" started-at="2021-12-01T12:01:59 IST" finished-at="2021-12-01T12:01:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AS -->
      </class> <!-- APITest.Demo2_TestNG -->
      <class name="APITest.Demo_TestNG">
        <test-method status="PASS" signature="BS()[pri:0, instance:APITest.Demo_TestNG@a3e297]" name="BS" is-config="true" duration-ms="8" started-at="2021-12-01T12:01:45 IST" finished-at="2021-12-01T12:01:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BS -->
        <test-method status="PASS" signature="BT()[pri:0, instance:APITest.Demo_TestNG@a3e297]" name="BT" is-config="true" duration-ms="2" started-at="2021-12-01T12:01:45 IST" finished-at="2021-12-01T12:01:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BT -->
        <test-method status="PASS" signature="BC()[pri:0, instance:APITest.Demo_TestNG@a3e297]" name="BC" is-config="true" duration-ms="1" started-at="2021-12-01T12:01:56 IST" finished-at="2021-12-01T12:01:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BC -->
        <test-method status="PASS" signature="BM()[pri:0, instance:APITest.Demo_TestNG@a3e297]" name="BM" is-config="true" duration-ms="1" started-at="2021-12-01T12:01:56 IST" finished-at="2021-12-01T12:01:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method status="PASS" signature="testcase1()[pri:0, instance:APITest.Demo_TestNG@a3e297]" name="testcase1" duration-ms="2" started-at="2021-12-01T12:01:56 IST" finished-at="2021-12-01T12:01:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="AM()[pri:0, instance:APITest.Demo_TestNG@a3e297]" name="AM" is-config="true" duration-ms="0" started-at="2021-12-01T12:01:56 IST" finished-at="2021-12-01T12:01:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method status="PASS" signature="BM()[pri:0, instance:APITest.Demo_TestNG@a3e297]" name="BM" is-config="true" duration-ms="0" started-at="2021-12-01T12:01:56 IST" finished-at="2021-12-01T12:01:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method status="PASS" signature="tsetcase2()[pri:0, instance:APITest.Demo_TestNG@a3e297]" name="tsetcase2" duration-ms="4" started-at="2021-12-01T12:01:56 IST" finished-at="2021-12-01T12:01:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tsetcase2 -->
        <test-method status="PASS" signature="AM()[pri:0, instance:APITest.Demo_TestNG@a3e297]" name="AM" is-config="true" duration-ms="0" started-at="2021-12-01T12:01:56 IST" finished-at="2021-12-01T12:01:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method status="PASS" signature="AC()[pri:0, instance:APITest.Demo_TestNG@a3e297]" name="AC" is-config="true" duration-ms="0" started-at="2021-12-01T12:01:56 IST" finished-at="2021-12-01T12:01:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AC -->
        <test-method status="PASS" signature="AT()[pri:0, instance:APITest.Demo_TestNG@a3e297]" name="AT" is-config="true" duration-ms="1" started-at="2021-12-01T12:01:59 IST" finished-at="2021-12-01T12:01:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AT -->
        <test-method status="PASS" signature="AS()[pri:0, instance:APITest.Demo_TestNG@a3e297]" name="AS" is-config="true" duration-ms="0" started-at="2021-12-01T12:01:59 IST" finished-at="2021-12-01T12:01:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AS -->
      </class> <!-- APITest.Demo_TestNG -->
      <class name="APITest.test1">
        <test-method status="PASS" signature="create_board()[pri:0, instance:APITest.test1@d9d034]" name="create_board" duration-ms="743" started-at="2021-12-01T12:01:56 IST" finished-at="2021-12-01T12:01:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create_board -->
        <test-method status="PASS" signature="get_board()[pri:1, instance:APITest.test1@d9d034]" name="get_board" duration-ms="621" started-at="2021-12-01T12:01:57 IST" finished-at="2021-12-01T12:01:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_board -->
        <test-method status="PASS" signature="delete_board()[pri:2, instance:APITest.test1@d9d034]" name="delete_board" duration-ms="829" started-at="2021-12-01T12:01:58 IST" finished-at="2021-12-01T12:01:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete_board -->
      </class> <!-- APITest.test1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
